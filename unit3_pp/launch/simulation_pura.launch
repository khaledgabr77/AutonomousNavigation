<?xml version="1.0" encoding="UTF-8"?>
<!-- High level launch file for Unit 3 Simulation -->
<launch>

<env name="GAZEBO_MODEL_PATH" value="$(find unit3_pp)/worlds/" />

<arg name="use_gui" default="true"/>

<!-- Set name of the world to be launched, configure as required -->
<!-- <arg name="world_name" default="worlds/empty.world"/> -->
<arg name="world_name" default="$(find unit3_pp)/worlds/unit3.world"/>

<include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/> 
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="$(arg use_gui)"/>
    <arg name="headless" value="true"/>
    <arg name="debug" value="false"/>
</include>

<arg name="x_pos" default="-2.9"/>
<arg name="y_pos" default="-2.9"/>
<arg name="z_pos" default="0.0"/>
<arg name="yaw" default="0.0"/>


<!-- Send URDF to parameter server -->
  <param command="$(find xacro)/xacro $(find pura_description)/urdf/pura.xacro" name="robot_description"/>


<!-- Spawn a robot into Gazebo -->
<!-- Requires: urdf 'robot_description' in parameter server -->
<arg name= "robot_name" default= "pura"/>

<node name="urdf_robot_model_spawner" pkg="gazebo_ros" type="spawn_model"
  args="-param robot_description
  -urdf
  -x $(arg x_pos)
  -y $(arg y_pos)
  -z $(arg z_pos)
  -Y $(arg yaw)
  -model $(arg robot_name)"
  respawn="false" output="screen"/>

  <!-- Broadcast TF values for all fixed elements in the URDF description tree such as structural plates, bars -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <!-- Broadcast TF values for all moving elements in the URDF description tree such as wheels, joints -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- Determine whether to run a static transform publisher or not -->
  <arg name="static_tf" default="true" />
  <node if="$(arg static_tf)" pkg="tf2_ros" type="static_transform_publisher" name="odom_wrt_map_tf" args="0 0 0 0 0 0 map odom" />

</launch>
